name: Deploy to Production - Azure Web App

on:
  push:
    branches:
      - production
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app-prod
          path: |
            .
            !venv/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app-prod
      
      - name: Setup production environment variables
        run: |
          echo "Setting up production environment..."
          if [ -f ".env prod" ]; then
            cp ".env prod" .env
            echo "Production environment file configured"
          else
            echo "Warning: .env prod file not found"
          fi
      
      - name: Pre-deployment checks
        run: |
          echo "Checking production deployment readiness..."
          sleep 30
      
      - name: Deploy to Azure Web App - Production
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'image-search-auto-prod'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_PROD }}
      
      - name: Post-deployment validation
        run: |
          echo "Production deployment completed. Starting validation..."
          sleep 60
          
          # Health check
          for i in {1..10}; do
            echo "Health check attempt $i/10..."
            if curl -s -f --connect-timeout 30 https://image-search-auto-prod.azurewebsites.net/health; then
              echo "‚úì Production health check successful!"
              break
            fi
            if [ $i -eq 10 ]; then
              echo "‚ùå Health check failed"
              exit 1
            fi
            sleep 20
          done
          
          echo "üéâ Production deployment successful!"
